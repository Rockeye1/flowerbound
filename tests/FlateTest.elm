module FlateTest exposing (flate, roundtrip)

import Expect
import Flate
import Hex.Convert
import Test exposing (Test, test)


input : String
input =



output : String
output =
    """25903F4B033118C6A1E0204E7E0375D0C10F20E2F242C1414144C43F705BAD28E7E49F41BA28E8E056AD053B382828625D1C1C440709E5385FEA7144A9E138C30D21C4A394521057DFC625C9F3CBC3F3BC49CF8BB90911EE781BBF6AEA9A8E5C838C115AA1048C6AD2E7A8C1104F14FACC48B56415B61321159262B16F49A2A4418F0CC084006628C543078AA8288B47DA1A435289E2111310A671804A83AF7813ED85915D68AC510BD640AA9250575270CFC244B08E6541CA946F9127A3BA54660968C5268568C4068F031AD0E306238C8D0307A9B105112A2F55BC5B8E4C99EE53791C4B8F4C364CCB3A250524055AC0448B7534B450500FA53A8E031FA9362078E37FE69AD432729E3AD9C245265BDD9A28BD66DCBEE7F7F9E3FE7225DC1FBF7A38BA3FDD1F3C7C3C7E1B5F9F73FBDCD152A15AC9B8D3B9E58C3B9A2B6C9D9727E756867F17F4D849CFC882D68B43B47DF6CEFF0C4FEDACE7760766F2DB6BF9CD81EC467E75FBF2FB76F6009936A20345FA28AA3FC34017F7FE00"""


roundtrip : Test
roundtrip =
    test "flate roundtrips" <|
        \_ ->
            case input |> Hex.Convert.toBytes of
                Just bytes ->
                    case
                        bytes
                            |> Flate.deflate
                            |> Flate.inflate
                    of
                        Nothing ->
                            Expect.fail "Could not inflate"

                        Just reinflated ->
                            reinflated
                                |> Hex.Convert.toString
                                |> Expect.equal input

                Nothing ->
                    Expect.fail "Could not convert"


flate : Test
flate =
    test "deflate is as expected" <|
        \_ ->
            case input |> Hex.Convert.toBytes of
                Just bytes ->
                    bytes
                        |> Flate.deflate
                        |> Hex.Convert.toString
                        |> Expect.equal output

                Nothing ->
                    Expect.fail "Could not convert"
